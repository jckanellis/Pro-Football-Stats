# SQLite version 3.x
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem 'sqlite3'
#
#default: &default
#  adapter: sqlite3
#  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
#  timeout: 5000

#development:
#  <<: *default
#  database: db/development.sqlite3

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
#test:
#  <<: *default
#  database: db/test.sqlite3

#production:
#  <<: *default
#  database: db/production.sqlite3

default: &default
  adapter: postgresql
  encoding: unicode
  # For details on connection pooling, see Rails configuration guide
  # http://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  username: pro_football_stats
  password: <%= ENV['DB_PASSWORD'] %>
  timeout: 5000

test:
  <<: *default
  database: pro_football_stats_test

development:
  <<: *default
  database: pro_football_stats

#development:
#  adapter: postgresql
#  encoding: unicode
#  database: pro_football_stats
#  pool: 5
#  username: pro_football_stats
#  password: <%= ENV['DB_PASSWORD'] %>
#  timeout: 5000

#test:
#  adapter: postgresql
#  encoding: unicode
#  database: pro_football_stats
#  pool: 5
#  username: pro_football_stats
#  password: <%= ENV['DB_PASSWORD'] %>
#  timeout: 5000

# On Heroku and other platform providers, you may have a full connection URL
# available as an environment variable. For example:
#
#   DATABASE_URL="postgres://myuser:mypass@localhost/somedatabase"
#
# You can use this database configuration with:
#
#   production:
#     url: <%= ENV['DATABASE_URL'] %>
#
production:
  <<: *default
  database: profootballstats_production
  username: profootballstats
  password: <%= ENV['PROFOOTBALLSTATS_DATABASE_PASSWORD'] %>
